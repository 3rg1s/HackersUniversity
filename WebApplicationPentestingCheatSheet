Pre-engagement:
  1.Get a permit (optional, but good to have).
  2.Define the scope. (The bigger, the better.)

Reconnaissance:
  1.Perform a whois scan
  2.Find the core developers of the site, find web app technologies by looking at their linkedin, cv.
  3.Find job offers, used technologies are usualy listed.

Footprinting:
  1.Find the subdomains that host web applications.
  2.Look for web apps served on ports other than 80,443.
  3.Get to know the application.(Register an account, use it.)
  4.Map used technologies(look at cookies,url's,errors,sessions)
  5.Map the application end points/url's (including AJAX, XML, API).
  6.Map the parameters/entry points of each page(POST,GET,AJAX,XML).
  7.Map http headers.
  

Application logic:
  1.Test client size controls (logic, flaws, number range,length, format, disabled elements, hidden fields, javascript validation)
  2.Check if the same tests are done server side.
  
Authentication and registration:
  1.Test password quality (requirements during registration)
  2.Test for user enumeration (user activity, forums, messages, scoreboards)
  3.Test for password guessing (waf present, ipban, rate limiter, cloudflare)
  4.Test account recovery (try giving unespected parameters when asked for username, userid, email)
    check recovery link randomness,
    weak encryption algorythm,
    availability after use,
  5.Test remember me function.
    session validity after logout,
  6.Test impersonation function.
  7.Test username uniqueness
    Try registering with utf-8 symbols and watch for normalisation,
    Try invisible characters,
  8.Try autogenerated credentials predictability.
  9.Check for unsafe transmission.
  10.Check for insecure storage.
  11.Check if user validation happens after login.
  
Input handling:

Application hosting:

Information leakage:
  
  
Tools:
Reconnaissance:
  1.https://www.whois.net/ (land specific)
  2.facebook.com
  2.linkedin.com

Footprinting:
  1.waybackurls
  1.https://pentest-tools.com/information-gathering/find-subdomains-of-domain
  1.https://github.com/UnaPibaGeek/ctfr
  1.Dictionary or bruteforce attack on domain prefixes.
  1.google dorks
  1.DNS zone transfer
  1.https://github.com/sangaline/wayback-machine-scraper
  1.spiders
  1.aquatone ( https://github.com/michenriksen/aquatone )
  2.nmap
  2.curl
  2.google dorks (use negative web search, - sign)
  2.spiders
  2.shodan
  2.netcraft.com
  2.yougetsignal.com
  


  
  Q:
